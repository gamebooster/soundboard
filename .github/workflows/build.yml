name: BuildDebug
on: [push, pull_request]
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install autoconf and pulseaudio
        run: sudo apt-get install autoconf libtool automake libpulse0
      - name: Build debug soundboard binary
        run: cargo build --verbose --features full,autoloop
      - name: Run tests
        run: cargo test --features full,autoloop

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install llvm
        shell: powershell
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install llvm --global
          echo "::set-env name=PATH::$env:PATH"
      - name: Build debug soundboard binary
        env:
          LIBCLANG_PATH: "C:\\ProgramData\\scoop\\apps\\llvm\\current\\bin"
        run: cargo build --verbose --features full
      - name: Run tests
        env:
          LIBCLANG_PATH: "C:\\ProgramData\\scoop\\apps\\llvm\\current\\bin"
        run: cargo test --features full

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: install opus
        run: |
          wget https://homebrew.bintray.com/bottles/opus-1.3.1.catalina.bottle.1.tar.gz
          tar -xvf opus-1.3.1.catalina.bottle.1.tar.gz opus/1.3.1/lib opus/1.3.1/include
          sudo cp -a opus/1.3.1/lib /usr/local
          sudo cp -a opus/1.3.1/include /usr/local
      - name: Build debug soundboard binary
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.14
          OPUS_STATIC: 1
          OPUS_NO_PKG: 1
          OPUS_LIB_DIR: "/usr/local/lib"
        run: cargo build --verbose --features full
      - name: Run tests
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.14
          OPUS_STATIC: 1
          OPUS_NO_PKG: 1
          OPUS_LIB_DIR: "/usr/local/lib"
        run: cargo test --features full
